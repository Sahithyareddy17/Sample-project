name: Maven CI
 
on:
  push:
  pull_request:
  workflow_dispatch:
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
 
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven
 
      # ðŸ‘‡ This overwrites my-app/pom.xml with a clean, known-good file
      - name: Write clean pom.xml (repair)
        working-directory: my-app
        run: |
          cat > pom.xml <<'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<project
xmlns="http://maven.apache.org/POM/4.0.0"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
 
  <groupId>com.example</groupId>
  <artifactId>my-app</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>my-app</name>
 
  <properties>
    <maven.compiler.release>17</maven.compiler.release>
<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <junit.jupiter.version>5.10.2</junit.jupiter.version>
  </properties>
 
  <dependencies>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
 
  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration><release>17</release></configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
      </plugin>
    </plugins>
  </build>
</project>
EOF
 
          echo "=== First 6 lines of the pom we will build with ==="
          nl -ba pom.xml | sed -n '1,6p'
 
      - name: Build & Test
        working-directory: my-app
        run: mvn -B -U -Dstyle.color=always clean package
 
      - name: List target (verbose)
        run: |
          echo "== ls -la my-app/target =="
          ls -la my-app/target || true
          echo "== find any jars under my-app =="
          find my-app -type f -name "*.jar" -print || true
 
      - name: Upload JAR
        uses: actions/upload-artifact@v4
        with:
          name: my-app-jar
          path: my-app/target/*.jar
          if-no-files-found: warn
